syntax = "proto3";
package api;

option go_package = "./api";

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

service InvoicesService {
    rpc CreateInvoice (CreateInvoiceRequest) returns (InvoiceReply) {
      option (google.api.http) = {
        post : "/v1/invoices",
        body : "*"
      };
  
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        summary : "Create Invoice handles the creation of a new invoice.";
        operation_id: "CreateInvoice";
        tags: "Invoices";
        responses : {
          key: "201";
          value : {
            description: "Created";
          }
        }
      }; 
    }

    rpc GetInvoice (GetInvoiceRequest) returns (InvoiceReply) {
      option (google.api.http) = {
        get : "/v1/invoices"
      };
  
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        summary : "Get Invoice handles the fetching of an invoice by ID.";
        operation_id: "GetInvoice";
        tags: "Invoices";
        responses : {
          key: "200";
          value : {
            description: "Ok";
          }
        }
      }; 
    }

    rpc ApproveTrade (ApproveTradeRequest) returns (ApproveTradeReply) {
      option (google.api.http) = {
        put : "/v1/invoices/approve",
        body : "*"
      };
  
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        summary : "ApproveTrade handles the approval process of a trade.";
        operation_id: "ApproveTrade";
        tags: "Invoices";
        responses : {
          key: "200";
          value : {
            description: "Ok";
          }
        }
      }; 
    }

    rpc GetIssuerBalance (GetIssuerBalanceRequest) returns (IssuerBalanceReply) {
      option (google.api.http) = {
        get : "/v1/issuers/balance"
      };
  
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        summary : "Get Invoice handles the fetching of an invoice by ID.";
        operation_id: "GetIssuerBalance";
        tags: "Issuers";
        responses : {
          key: "200";
          value : {
            description: "Ok";
          }
        }
      }; 
    }

    rpc GetInvestors (GetInvestorsRequest) returns (InvestorsReply) {
      option (google.api.http) = {
        get : "/v1/investors"
      };
  
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        summary : "Get Invoice handles the fetching of an invoice by ID.";
        operation_id: "GetInvestors";
        tags: "Investors";
        responses : {
          key: "200";
          value : {
            description: "Ok";
          }
        }
      }; 
    }

    rpc PlaceBid (PlaceBidRequest) returns (BidReply) {
      option (google.api.http) = {
        post : "/v1/bids",
        body : "*"
      };
  
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        summary : "Place bid handles the bidding on an invoice by investors.";
        operation_id: "PlaceBids";
        tags: "Bids";
        responses : {
          key: "201";
          value : {
            description: "Created";
          }
        }
      }; 
    }

  }
  
  message CreateInvoiceRequest {
    string number = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The invoice number in Alpha Numeric format. Example: RF-0017"}];
    string description = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The invoice description in text format."}];
    InvoiceStatusEnum.InvoiceStatus status = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The Invoice status value. Example: DRAFT, OPEN, FILLED, LOCKED, APPROVED."}];
    Money amount = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The Invoice amount value."}];
  }
  
  message InvoiceReply {
    string id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The invoice ID in uuid format."}];
    string number = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The invoice number in Alpha Numeric format. Example: RF-0017"}];
    string description = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The invoice description in text format."}];
    InvoiceStatusEnum.InvoiceStatus status = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The Invoice status value. Example: DRAFT, OPEN, FILLED, LOCKED, APPROVED."}];
    Money amount = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The Invoice amount value."}];
    google.protobuf.Timestamp created_at = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The invoice created at timestamp."}];
    google.protobuf.Timestamp updated_at = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The invoice updated at timestamp."}];
  }
  
  message GetInvoiceRequest {
    string id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The invoice ID in uuid format."}];
  }

  message GetIssuerBalanceRequest {
    string id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The issuer ID in uuid format."}];
  }

  message IssuerBalanceReply {
    string id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The issuer ID in uuid format."}];
    optional Wallet wallet = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The Issuer wallet info."}];
  }

  message GetInvestorsRequest {
    optional Pagination paging = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The pagination info."}];
  }

  message InvestorsReply {
    repeated Investor investors = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The list of investors."}];
  }

  message PlaceBidRequest {
    string invoice_id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The invoice ID in uuid format."}];
    string investor_id = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The investor ID in uuid format."}];
    Money bid_amount = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The bidding amount value."}];
  }

  message BidReply {}

  message ApproveTradeRequest {
    string invoice_id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The invoice ID in uuid format."}];
  }

  message ApproveTradeReply {}

  message Wallet {
    string id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The WALLET ID in uuid format."}];
    string currency = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "ISO 4217 Currency Code"}];
    int64 balance = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "balance Amount using smallest unit value"}];
    google.protobuf.Timestamp created_at = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The investor created at timestamp."}];
    google.protobuf.Timestamp updated_at = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The investor updated at timestamp."}];
  }

  message Investor {
    string id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The investor ID in uuid format."}];
    string name = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The investor name in text format. Example: Richard Reil"}];
    string vat = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The investor vat number in Alpha Numeric format."}];
    optional Wallet wallet = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The Investor wallet info."}];
    google.protobuf.Timestamp created_at = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The investor created at timestamp."}];
    google.protobuf.Timestamp updated_at = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The investor updated at timestamp."}];
  }

  message Pagination {
    int32 page = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The page number of pagination."}];
    int32 limit = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The limit of pagination."}];
  }

  // Money message for implementing Fowler Money pattern.
  message Money {
    string currency = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "ISO 4217 Currency Code"}];
    int64 amount = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Amount using smallest unit value"}];
  }

  message InvoiceStatusEnum{
    // InvoiceStatus
    enum InvoiceStatus{
      DRAFT = 0; // This will be considered as default value when a Invoice is created.
      OPEN = 1; // Represents the Invoice is open for bidding.
      FILLED = 2; // Represents the invoice is filled.
      LOCKED = 3; // Represents the invoice is locked.
      APPROVED = 4; // Represents the invoice is approved.
    }
  }
