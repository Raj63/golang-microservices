version: '3'

services:
  web-portal:
    build:
      context: ./services/web-portal
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    restart: on-failure
    depends_on:
      - invoices
    environment:
      - INVOICES_GRPC_ADDRESS=invoices:8080
      - APP_ENV=development
      - PRIMARY_DB_URI=postgres://postgres:secret@postgres:5432/invoices?sslmode=disable
      - DB_ROOT_USERNAME=postgres
      - DB_PASSWORD=secret
    networks:
      - go-network

  invoices:
    build:
      context: ./services/invoices
      dockerfile: Dockerfile
    ports:
      - 8081:8080
    restart: on-failure
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - APP_ENV=development
      - PRIMARY_DB_URI=postgres://postgres:secret@postgres:5432/invoices?sslmode=disable
      - DB_USERNAME=postgres
      - DB_ROOT_USERNAME=postgres
      - DB_PASSWORD=secret
    networks:
      - go-network

  postgres:
    image: postgres:latest
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: invoices
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres-config/pg_hba.conf:/etc/postgresql/pg_hba.conf
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - go-network
    
volumes:
  postgres-data:

networks:
  go-network:
    driver: bridge
